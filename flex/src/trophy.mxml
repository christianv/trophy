<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:view="views.*"
			   minWidth="800"
			   minHeight="400"
			   creationComplete="initApp()"
			   preloader="mx.preloaders.DownloadProgressBar"
			   xmlns:mappings="mate.mappings.*">
	<fx:Style source="assets/css/global.css" />
	<fx:Declarations>
		<mappings:TrophyEventMapping />
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import mate.events.*;

			import mx.controls.Alert;
			import mx.core.Container;
			import mx.core.FlexGlobals;

			private function submitSearch(event:SearchEvent):void {
				Alert.show(event.locationname);
			}

			private function changeGlobalState(event:GlobalStateEvent):void {
				// TODO Only change the viewstack selected item if the item isn't currently being displayed

				viewstack.selectedChild = NavigatorContent(viewstack.getChildByName(event.globalstate));
			}

			private function addEventListeners():void{
				addEventListener(GlobalStateEvent.CHANGEGLOBALSTATE, changeGlobalState);
				addEventListener(SearchEvent.SUBMITSEARCH, submitSearch);
			}
			private function addDispatchEvents():void {
				var languageEvent:LanguageEvent = new LanguageEvent(LanguageEvent.GETLOCALE);
				dispatchEvent(languageEvent);

				var changeGlobalStateEvent:GlobalStateEvent = new GlobalStateEvent(GlobalStateEvent.CHANGEGLOBALSTATE);
				changeGlobalStateEvent.globalstate = "mainsearchview";
				dispatchEvent(changeGlobalStateEvent);
			}

			private function initApp():void {
				addEventListeners();
				addDispatchEvents();
			}

		]]>
	</fx:Script>

	<s:Group width="100%" height="100%">
		<s:layout>
			<s:VerticalLayout />
		</s:layout>
		<view:topnavigation id="topnavigation" />
		<mx:ViewStack id="viewstack" width="100%" height="100%">
			<s:NavigatorContent id="mainsearchview">
				<view:mainsearch id="mainsearch" horizontalCenter="0" verticalCenter="0" />
			</s:NavigatorContent>
			<s:NavigatorContent id="registerview" left="200">
				<view:register id="register"/>
			</s:NavigatorContent>
		</mx:ViewStack>
		<view:languages id="languages" />
	</s:Group>
</s:Application>